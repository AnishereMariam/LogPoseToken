/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LogPoseToken,
  LogPoseTokenInterface,
} from "../../contracts/LogPoseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516120b63803806120b683398181016040528101906100329190610577565b336040518060400160405280600d81526020017f4c6f67506f736520546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c5054000000000000000000000000000000000000000000000000000000000081525081600390816100ae91906107ea565b5080600490816100be91906107ea565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906108fd565b60405180910390fd5b610142816101c060201b60201c565b5060008111610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017d9061099b565b60405180910390fd5b6101ba3361019861028660201b60201c565b600a6101a49190610b2a565b836101af9190610b75565b61028f60201b60201c565b50610c4c565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103015760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102f891906108fd565b60405180910390fd5b6103136000838361031760201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361036957806002600082825461035d9190610bb7565b9250508190555061043c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156103f5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103ec93929190610bfa565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361048557806002600082825403925050819055506104d2565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161052f9190610c31565b60405180910390a3505050565b600080fd5b6000819050919050565b61055481610541565b811461055f57600080fd5b50565b6000815190506105718161054b565b92915050565b60006020828403121561058d5761058c61053c565b5b600061059b84828501610562565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062557607f821691505b602082108103610638576106376105de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610663565b6106aa8683610663565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106e76106e26106dd84610541565b6106c2565b610541565b9050919050565b6000819050919050565b610701836106cc565b61071561070d826106ee565b848454610670565b825550505050565b600090565b61072a61071d565b6107358184846106f8565b505050565b5b818110156107595761074e600082610722565b60018101905061073b565b5050565b601f82111561079e5761076f8161063e565b61077884610653565b81016020851015610787578190505b61079b61079385610653565b83018261073a565b50505b505050565b600082821c905092915050565b60006107c1600019846008026107a3565b1980831691505092915050565b60006107da83836107b0565b9150826002028217905092915050565b6107f3826105a4565b67ffffffffffffffff81111561080c5761080b6105af565b5b610816825461060d565b61082182828561075d565b600060209050601f8311600181146108545760008415610842578287015190505b61084c85826107ce565b8655506108b4565b601f1984166108628661063e565b60005b8281101561088a57848901518255600182019150602085019450602081019050610865565b868310156108a757848901516108a3601f8916826107b0565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e7826108bc565b9050919050565b6108f7816108dc565b82525050565b600060208201905061091260008301846108ee565b92915050565b600082825260208201905092915050565b7f496e697469616c20737570706c79206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610985602583610918565b915061099082610929565b604082019050919050565b600060208201905081810360008301526109b481610978565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610a4157808604811115610a1d57610a1c6109bb565b5b6001851615610a2c5780820291505b8081029050610a3a856109ea565b9450610a01565b94509492505050565b600082610a5a5760019050610b16565b81610a685760009050610b16565b8160018114610a7e5760028114610a8857610ab7565b6001915050610b16565b60ff841115610a9a57610a996109bb565b5b8360020a915084821115610ab157610ab06109bb565b5b50610b16565b5060208310610133831016604e8410600b8410161715610aec5782820a905083811115610ae757610ae66109bb565b5b610b16565b610af984848460016109f7565b92509050818404811115610b1057610b0f6109bb565b5b81810290505b9392505050565b600060ff82169050919050565b6000610b3582610541565b9150610b4083610b1d565b9250610b6d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a4a565b905092915050565b6000610b8082610541565b9150610b8b83610541565b9250828202610b9981610541565b91508282048414831517610bb057610baf6109bb565b5b5092915050565b6000610bc282610541565b9150610bcd83610541565b9250828201905080821115610be557610be46109bb565b5b92915050565b610bf481610541565b82525050565b6000606082019050610c0f60008301866108ee565b610c1c6020830185610beb565b610c296040830184610beb565b949350505050565b6000602082019050610c466000830184610beb565b92915050565b61145b80610c5b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610239578063a9059cbb14610257578063dd62ed3e14610287578063f2fde38b146102b7576100ea565b806370a08231146101e1578063715018a6146102115780638da5cb5b1461021b576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d3565b6040516101049190610faa565b60405180910390f35b61012760048036038101906101229190611065565b610365565b60405161013491906110c0565b60405180910390f35b610145610388565b60405161015291906110ea565b60405180910390f35b61017560048036038101906101709190611105565b610392565b60405161018291906110c0565b60405180910390f35b6101936103c1565b6040516101a09190611174565b60405180910390f35b6101c360048036038101906101be9190611065565b6103ca565b005b6101df60048036038101906101da919061118f565b610492565b005b6101fb60048036038101906101f691906111bc565b6104e2565b60405161020891906110ea565b60405180910390f35b61021961052a565b005b61022361053e565b60405161023091906111f8565b60405180910390f35b610241610568565b60405161024e9190610faa565b60405180910390f35b610271600480360381019061026c9190611065565b6105fa565b60405161027e91906110c0565b60405180910390f35b6102a1600480360381019061029c9190611213565b61061d565b6040516102ae91906110ea565b60405180910390f35b6102d160048036038101906102cc91906111bc565b6106a4565b005b6060600380546102e290611282565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90611282565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b60008061037061072a565b905061037d818585610732565b600191505092915050565b6000600254905090565b60008061039d61072a565b90506103aa858285610744565b6103b58585856107d9565b60019150509392505050565b60006012905090565b6103d26108cd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610441576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610438906112ff565b60405180910390fd5b60008111610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b9061136b565b60405180910390fd5b61048e8282610954565b5050565b600081116104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc9061136b565b60405180910390fd5b6104df33826109d6565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105326108cd565b61053c6000610a58565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461057790611282565b80601f01602080910402602001604051908101604052809291908181526020018280546105a390611282565b80156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b5050505050905090565b60008061060561072a565b90506106128185856107d9565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106ac6108cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361071e5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161071591906111f8565b60405180910390fd5b61072781610a58565b50565b600033905090565b61073f8383836001610b1e565b505050565b6000610750848461061d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107d357818110156107c3578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107ba9392919061138b565b60405180910390fd5b6107d284848484036000610b1e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084b5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161084291906111f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108bd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108b491906111f8565b60405180910390fd5b6108c8838383610cf5565b505050565b6108d561072a565b73ffffffffffffffffffffffffffffffffffffffff166108f361053e565b73ffffffffffffffffffffffffffffffffffffffff16146109525761091661072a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161094991906111f8565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109bd91906111f8565b60405180910390fd5b6109d260008383610cf5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a485760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a3f91906111f8565b60405180910390fd5b610a5482600083610cf5565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b905760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b8791906111f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c025760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bf991906111f8565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ce691906110ea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d47578060026000828254610d3b91906113f1565b92505081905550610e1a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dca9392919061138b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e635780600260008282540392505081905550610eb0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f0d91906110ea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f54578082015181840152602081019050610f39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f7c82610f1a565b610f868185610f25565b9350610f96818560208601610f36565b610f9f81610f60565b840191505092915050565b60006020820190508181036000830152610fc48184610f71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ffc82610fd1565b9050919050565b61100c81610ff1565b811461101757600080fd5b50565b60008135905061102981611003565b92915050565b6000819050919050565b6110428161102f565b811461104d57600080fd5b50565b60008135905061105f81611039565b92915050565b6000806040838503121561107c5761107b610fcc565b5b600061108a8582860161101a565b925050602061109b85828601611050565b9150509250929050565b60008115159050919050565b6110ba816110a5565b82525050565b60006020820190506110d560008301846110b1565b92915050565b6110e48161102f565b82525050565b60006020820190506110ff60008301846110db565b92915050565b60008060006060848603121561111e5761111d610fcc565b5b600061112c8682870161101a565b935050602061113d8682870161101a565b925050604061114e86828701611050565b9150509250925092565b600060ff82169050919050565b61116e81611158565b82525050565b60006020820190506111896000830184611165565b92915050565b6000602082840312156111a5576111a4610fcc565b5b60006111b384828501611050565b91505092915050565b6000602082840312156111d2576111d1610fcc565b5b60006111e08482850161101a565b91505092915050565b6111f281610ff1565b82525050565b600060208201905061120d60008301846111e9565b92915050565b6000806040838503121561122a57611229610fcc565b5b60006112388582860161101a565b92505060206112498582860161101a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061129a57607f821691505b6020821081036112ad576112ac611253565b5b50919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006112e9600f83610f25565b91506112f4826112b3565b602082019050919050565b60006020820190508181036000830152611318816112dc565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000611355601d83610f25565b91506113608261131f565b602082019050919050565b6000602082019050818103600083015261138481611348565b9050919050565b60006060820190506113a060008301866111e9565b6113ad60208301856110db565b6113ba60408301846110db565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113fc8261102f565b91506114078361102f565b925082820190508082111561141f5761141e6113c2565b5b9291505056fea2646970667358221220a125380d3b6cab20b41394b52b7f7917618c6aea7cdbf1249fdfef167361ee4e64736f6c634300081e0033";

type LogPoseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogPoseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LogPoseToken__factory extends ContractFactory {
  constructor(...args: LogPoseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override deploy(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSupply, overrides || {}) as Promise<
      LogPoseToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LogPoseToken__factory {
    return super.connect(runner) as LogPoseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogPoseTokenInterface {
    return new Interface(_abi) as LogPoseTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LogPoseToken {
    return new Contract(address, _abi, runner) as unknown as LogPoseToken;
  }
}
