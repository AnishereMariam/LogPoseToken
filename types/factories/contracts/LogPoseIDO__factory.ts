/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LogPoseIDO,
  LogPoseIDOInterface,
} from "../../contracts/LogPoseIDO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lptToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pusdToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalTokensForSale",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "RateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountPUSD",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountLPT",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountPUSD",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lptToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pusdToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokensForSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawLPT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPUSD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611b43380380611b43833981810160405281019061003291906103da565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610450565b60405180910390fd5b6100b48161027d60201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561011f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61015e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610155906104c8565b60405180910390fd5b600082116101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019890610534565b60405180910390fd5b600081116101e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101db906105c6565b60405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160038190555080600481905550505050506105e6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037182610346565b9050919050565b61038181610366565b811461038c57600080fd5b50565b60008151905061039e81610378565b92915050565b6000819050919050565b6103b7816103a4565b81146103c257600080fd5b50565b6000815190506103d4816103ae565b92915050565b600080600080608085870312156103f4576103f3610341565b5b60006104028782880161038f565b94505060206104138782880161038f565b9350506040610424878288016103c5565b9250506060610435878288016103c5565b91505092959194509250565b61044a81610366565b82525050565b60006020820190506104656000830184610441565b92915050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b60006104b260158361046b565b91506104bd8261047c565b602082019050919050565b600060208201905081810360008301526104e1816104a5565b9050919050565b7f52617465206d757374206265203e203000000000000000000000000000000000600082015250565b600061051e60108361046b565b9150610529826104e8565b602082019050919050565b6000602082019050818103600083015261054d81610511565b9050919050565b7f546f74616c20746f6b656e7320666f722073616c65206d757374206265203e2060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b60006105b060218361046b565b91506105bb82610554565b604082019050919050565b600060208201905081810360008301526105df816105a3565b9050919050565b61154e806105f56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637f7614b4116100715780637f7614b4146101555780638da5cb5b14610173578063edf62cf114610191578063f2fde38b146101af578063fc370f83146101cb578063fe2ab88c146101e7576100b4565b80632c4e722e146100b957806334fcf437146100d75780633610724e146100f3578063518ab2a81461010f57806360219c7b1461012d578063715018a61461014b575b600080fd5b6100c1610203565b6040516100ce9190610c52565b60405180910390f35b6100f160048036038101906100ec9190610c9e565b610209565b005b61010d60048036038101906101089190610c9e565b610299565b005b6101176106ed565b6040516101249190610c52565b60405180910390f35b6101356106f3565b6040516101429190610c52565b60405180910390f35b6101536106f9565b005b61015d61070d565b60405161016a9190610d4a565b60405180910390f35b61017b610733565b6040516101889190610d86565b60405180910390f35b61019961075c565b6040516101a69190610d4a565b60405180910390f35b6101c960048036038101906101c49190610dcd565b610782565b005b6101e560048036038101906101e09190610c9e565b610808565b005b61020160048036038101906101fc9190610c9e565b61094e565b005b60035481565b610211610ae6565b60008111610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b90610e57565b60405180910390fd5b7fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d191660035482604051610287929190610e77565b60405180910390a18060038190555050565b600081116102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d390610eec565b60405180910390fd5b60045460055410610322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031990610f58565b60405180910390fd5b6000670de0b6b3a76400009050600081600354846103409190610fa7565b61034a9190611018565b90506000811161038f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038690611095565b60405180910390fd5b600454816005546103a091906110b5565b11156103e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d890611135565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161043d9190610d86565b602060405180830381865afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e919061116a565b10156104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b6906111e3565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161051e93929190611203565b6020604051808303816000875af115801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190611272565b6105a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610597906112eb565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105fd92919061130b565b6020604051808303816000875af115801561061c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106409190611272565b61067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690611380565b60405180910390fd5b806005600082825461069191906110b5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f3384836040516106e0929190610e77565b60405180910390a2505050565b60055481565b60045481565b610701610ae6565b61070b6000610b6d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61078a610ae6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107fc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107f39190610d86565b60405180910390fd5b61080581610b6d565b50565b610810610ae6565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610856610733565b836040518363ffffffff1660e01b815260040161087492919061130b565b6020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611272565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed906113ec565b60405180910390fd5b6108fe610733565b73ffffffffffffffffffffffffffffffffffffffff167fd8102a2d73a808d6664a3116966c123291d07ec500edf12e27ee919d7b81bd3c826040516109439190610c52565b60405180910390a250565b610956610ae6565b600554600454610966919061140c565b8111156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f9061148c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6109ee610733565b836040518363ffffffff1660e01b8152600401610a0c92919061130b565b6020604051808303816000875af1158015610a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190611272565b610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a85906114f8565b60405180910390fd5b610a96610733565b73ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b82604051610adb9190610c52565b60405180910390a250565b610aee610c31565b73ffffffffffffffffffffffffffffffffffffffff16610b0c610733565b73ffffffffffffffffffffffffffffffffffffffff1614610b6b57610b2f610c31565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b629190610d86565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610c4c81610c39565b82525050565b6000602082019050610c676000830184610c43565b92915050565b600080fd5b610c7b81610c39565b8114610c8657600080fd5b50565b600081359050610c9881610c72565b92915050565b600060208284031215610cb457610cb3610c6d565b5b6000610cc284828501610c89565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d10610d0b610d0684610ccb565b610ceb565b610ccb565b9050919050565b6000610d2282610cf5565b9050919050565b6000610d3482610d17565b9050919050565b610d4481610d29565b82525050565b6000602082019050610d5f6000830184610d3b565b92915050565b6000610d7082610ccb565b9050919050565b610d8081610d65565b82525050565b6000602082019050610d9b6000830184610d77565b92915050565b610daa81610d65565b8114610db557600080fd5b50565b600081359050610dc781610da1565b92915050565b600060208284031215610de357610de2610c6d565b5b6000610df184828501610db8565b91505092915050565b600082825260208201905092915050565b7f52617465206d757374206265203e203000000000000000000000000000000000600082015250565b6000610e41601083610dfa565b9150610e4c82610e0b565b602082019050919050565b60006020820190508181036000830152610e7081610e34565b9050919050565b6000604082019050610e8c6000830185610c43565b610e996020830184610c43565b9392505050565b7f416d6f756e74206d757374206265203e20300000000000000000000000000000600082015250565b6000610ed6601283610dfa565b9150610ee182610ea0565b602082019050919050565b60006020820190508181036000830152610f0581610ec9565b9050919050565b7f416c6c20746f6b656e7320736f6c640000000000000000000000000000000000600082015250565b6000610f42600f83610dfa565b9150610f4d82610f0c565b602082019050919050565b60006020820190508181036000830152610f7181610f35565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fb282610c39565b9150610fbd83610c39565b9250828202610fcb81610c39565b91508282048414831517610fe257610fe1610f78565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061102382610c39565b915061102e83610c39565b92508261103e5761103d610fe9565b5b828204905092915050565b7f496e76616c6964204c505420616d6f756e740000000000000000000000000000600082015250565b600061107f601283610dfa565b915061108a82611049565b602082019050919050565b600060208201905081810360008301526110ae81611072565b9050919050565b60006110c082610c39565b91506110cb83610c39565b92508282019050808211156110e3576110e2610f78565b5b92915050565b7f4578636565647320617661696c61626c6520746f6b656e730000000000000000600082015250565b600061111f601883610dfa565b915061112a826110e9565b602082019050919050565b6000602082019050818103600083015261114e81611112565b9050919050565b60008151905061116481610c72565b92915050565b6000602082840312156111805761117f610c6d565b5b600061118e84828501611155565b91505092915050565b7f4e6f7420656e6f756768204c505420696e20636f6e7472616374000000000000600082015250565b60006111cd601a83610dfa565b91506111d882611197565b602082019050919050565b600060208201905081810360008301526111fc816111c0565b9050919050565b60006060820190506112186000830186610d77565b6112256020830185610d77565b6112326040830184610c43565b949350505050565b60008115159050919050565b61124f8161123a565b811461125a57600080fd5b50565b60008151905061126c81611246565b92915050565b60006020828403121561128857611287610c6d565b5b60006112968482850161125d565b91505092915050565b7f50555344207472616e73666572206661696c6564000000000000000000000000600082015250565b60006112d5601483610dfa565b91506112e08261129f565b602082019050919050565b60006020820190508181036000830152611304816112c8565b9050919050565b60006040820190506113206000830185610d77565b61132d6020830184610c43565b9392505050565b7f4c5054207472616e73666572206661696c656400000000000000000000000000600082015250565b600061136a601383610dfa565b915061137582611334565b602082019050919050565b600060208201905081810360008301526113998161135d565b9050919050565b7f57697468647261772050555344206661696c6564000000000000000000000000600082015250565b60006113d6601483610dfa565b91506113e1826113a0565b602082019050919050565b60006020820190508181036000830152611405816113c9565b9050919050565b600061141782610c39565b915061142283610c39565b925082820390508181111561143a57611439610f78565b5b92915050565b7f496e76616c6964207769746864726177616c20616d6f756e7400000000000000600082015250565b6000611476601983610dfa565b915061148182611440565b602082019050919050565b600060208201905081810360008301526114a581611469565b9050919050565b7f5769746864726177204c5054206661696c656400000000000000000000000000600082015250565b60006114e2601383610dfa565b91506114ed826114ac565b602082019050919050565b60006020820190508181036000830152611511816114d5565b905091905056fea264697066735822122092ff5b81bc05de47ac8a63930fd824231b2da3ebe2718672bac99cacd4a8d92b64736f6c634300081e0033";

type LogPoseIDOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogPoseIDOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LogPoseIDO__factory extends ContractFactory {
  constructor(...args: LogPoseIDOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lptToken: AddressLike,
    _pusdToken: AddressLike,
    _rate: BigNumberish,
    _totalTokensForSale: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _lptToken,
      _pusdToken,
      _rate,
      _totalTokensForSale,
      overrides || {}
    );
  }
  override deploy(
    _lptToken: AddressLike,
    _pusdToken: AddressLike,
    _rate: BigNumberish,
    _totalTokensForSale: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _lptToken,
      _pusdToken,
      _rate,
      _totalTokensForSale,
      overrides || {}
    ) as Promise<
      LogPoseIDO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LogPoseIDO__factory {
    return super.connect(runner) as LogPoseIDO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogPoseIDOInterface {
    return new Interface(_abi) as LogPoseIDOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LogPoseIDO {
    return new Contract(address, _abi, runner) as unknown as LogPoseIDO;
  }
}
